#
# Copyright (C) SUSE LINUX GmbH 2016, all rights reserved.
#
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation; either version 2.1 of the License, or
# (at your option) version 3.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.

# process user defined configuration
. ${RAPIDO_DIR}/rapido.conf

# initramfs output path
DRACUT_OUT="${RAPIDO_DIR}/initrds/myinitrd"

# initramfs xattr name, with optional qemu parameters
QEMU_ARGS_XATTR="user.rapido.qemu_args"

# initramfs ramdisk details
ZRAM_INITRD_SIZE="1G"
ZRAM_INITRD_MNT="$RAPIDO_DIR/initrds"

if [ -n "$CEPH_SRC" ]; then
	# ramdisk for vstart.sh logs
	ZRAM_VSTART_OUT_SIZE="1G"
	ZRAM_VSTART_OUT_MNT="${CEPH_SRC}/out"

	# ramdisk for vstart.sh data. Assume --memstore, so we only need enough
	# space to store the mon/mds/osd metadata.
	ZRAM_VSTART_DATA_SIZE="1G"
	ZRAM_VSTART_DATA_MNT="${CEPH_SRC}/dev"

	if [ -f "${CEPH_SRC}/../build/CMakeCache.txt" ]; then
		# cmake build, compiled binaries and configs are in build subdir
		CEPH_BIN="${CEPH_SRC}/../build/bin/ceph"
		CEPH_RBD_BIN="${CEPH_SRC}/../build/bin/rbd"
		CEPH_MOUNT_BIN="${CEPH_SRC}/../build/bin/mount.ceph"
		CEPH_RADOS_BIN="${CEPH_SRC}/rados"
		CEPH_FUSE_BIN="${CEPH_SRC}/../build/bin/ceph-fuse"
		CEPH_CONF="${CEPH_SRC}/../build/ceph.conf"
		CEPH_KEYRING="${CEPH_SRC}/../build/keyring"
	else
		# autotools build
		CEPH_BIN="${CEPH_SRC}/ceph"
		CEPH_RBD_BIN="${CEPH_SRC}/rbd"
		CEPH_MOUNT_BIN="${CEPH_SRC}/mount.ceph"
		CEPH_RADOS_BIN="${CEPH_SRC}/rados"
		CEPH_FUSE_BIN="${CEPH_SRC}/ceph-fuse"
		CEPH_CONF="${CEPH_SRC}/ceph.conf"
		CEPH_KEYRING="${CEPH_SRC}/keyring"
	fi
	RBD_NAMER_BIN="${CEPH_SRC}/ceph-rbdnamer"
	RBD_UDEV_RULES="${CEPH_SRC}/../udev/50-rbd.rules"
	CEPH_UDEV_RULES="${CEPH_SRC}/../udev/95-ceph-osd.rules"
	CEPH_DISK_SYSTEMD_SVC="${CEPH_SRC}/../systemd/ceph-disk@.service"
	CEPH_OSD_SYSTEMD_SVC="${CEPH_SRC}/../systemd/ceph-osd@.service"
else
	# use installed Ceph binaries and configs
	RBD_NAMER_BIN="/usr/bin/ceph-rbdnamer"
	RBD_UDEV_RULES="/usr/lib/udev/rules.d/50-rbd.rules"
	CEPH_UDEV_RULES="/usr/lib/udev/rules.d/95-ceph-osd.rules"
	CEPH_DISK_SYSTEMD_SVC="/usr/lib/systemd/system/ceph-disk@.service"
	CEPH_OSD_SYSTEMD_SVC="/usr/lib/systemd/system/ceph-osd@.service"
	CEPH_BIN="/usr/bin/ceph"
	CEPH_RBD_BIN="/usr/bin/rbd"
	CEPH_MOUNT_BIN="/usr/sbin/mount.ceph"
	CEPH_RADOS_BIN="/usr/bin/rados"
	CEPH_FUSE_BIN="/usr/bin/ceph-fuse"
	CEPH_CONF="/etc/ceph/ceph.conf"
	CEPH_KEYRING="/etc/ceph/ceph.client.${CEPH_USER}.keyring"
fi

function _fail() {
	echo "error: $*"
	exit 1
}
